<?xml version="1.0" ?>

<!-- <include filename="$(find mybot)/urdf/mybot.plugins.xacro" /> -->

<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->

<!-- <urdf:property name="camera_size" value="0.02"/>
<urdf:property name="camera_origin_x" value="0.065"/>
<urdf:property name="camera_origin_y" value="0"/>
<urdf:property name="camera_origin_z" value="0.025"/> -->

<robot name="two_link_arm" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- <gazebo reference="camera">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1].
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/mybot/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo> -->

  <link name="base_link">
    <inertial>
      <origin 
        xyz="0.0010593 0.033709 7.5158E-19"
        rpy="0 0 0" />
      <mass
        value="33.447" />
      <inertia
        ixx="0.064903"
        ixy="-0.0023213"
        ixz="1.8936E-20"
        iyy="0.05032"
        iyz="7.9913E-18"
        izz="0.065011" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_link_arm/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_link_arm/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>

  <!-- Camera -->
  <!-- <link name="camera">
    <visual>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.02 0.02 0.02"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="0.02"/>
    <mass
        value="0.02" />
  </link> -->

  <!-- <joint name="camera_joint" type="fixed">
    <origin xyz="0.065 0 0.025" rpy="0 0 0"/>
    <origin xyz="0.5 0.5 0.5" rpy="0 0 0"/>
    <origin xyz="0.5 0.5 0.5" rpy="0 1.57 0"/>



    <parent link="base_link"/>
    <child link="camera"/>
  </joint> -->

  <link
    name="Link_1">
    <inertial>
      <origin
        xyz="-0.02361 1.4058E-08 0.125"
        rpy="0 0 0" />
      <mass
        value="0.82473" />
      <inertia
        ixx="0.0054808"
        ixy="-9.9765E-10"
        ixz="-6.9854E-20"
        iyy="0.005484"
        iyz="6.7821E-19"
        izz="0.00026088" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_link_arm/meshes/Link_1.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_link_arm/meshes/Link_1.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Joint_1"
    type="revolute">
    <origin
      xyz="0.02495 0 0.095"
      rpy="1.5708 0 3.1416" />
    <parent
      link="base_link" />
    <child
      link="Link_1" />
    <axis
      xyz="1 0 0" />
    <limit
      lower="-3.14"
      upper="0.0"
      effort="100"
      velocity="0.3" />
  </joint>
  <link
    name="Link_2">
    <inertial>
      <origin
        xyz="0.024112 -1.3878E-17 0.10532"
        rpy="0 0 0" />
      <mass
        value="0.70847" />
      <inertia
        ixx="0.0034993"
        ixy="5.3486E-21"
        ixz="-6.5034E-05"
        iyy="0.0035013"
        iyz="4.5621E-19"
        izz="0.00022333" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_link_arm/meshes/Link_2.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="1 1 1 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://two_link_arm/meshes/Link_2.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="Joint_2"
    type="revolute">
    <origin
      xyz="0 0 0.25"
      rpy="0 0 0" />
    <parent
      link="Link_1" />
    <child
      link="Link_2" />
    <axis
      xyz="1 0 0" />
    <limit
      lower="0"
      upper="3.14"
      effort="100"
      velocity="0.3" />
  </joint>


  <transmission name="trans_Joint_1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="Joint_1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_Joint_1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="trans_Joint_2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="Joint_2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_Joint_2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    </plugin>
  </gazebo>
</robot>